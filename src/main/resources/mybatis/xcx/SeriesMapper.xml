<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.xcx.dao.SeriesDao">

	<select id="get" resultType="com.bootdo.xcx.domain.SeriesDO">
		select `id`,`uuid`,`brand_id`,`cname`,`ename`,`img`,`describe`,`remark`,`modified`,`gtm_create`,`gtm_modified`,`status`,`created` from series where id = #{value}
	</select>

<select id="getByUUID" resultType="com.bootdo.xcx.domain.SeriesDO">
		select `id`,`uuid`,`brand_id`,`cname`,`ename`,`img`,`describe`,`remark`,`modified`,`gtm_create`,`gtm_modified`,`status`,`created` from series where uuid = #{value}
	</select>

	<select id="list" resultType="com.bootdo.xcx.domain.SeriesDO">
		select `id`,`uuid`,`brand_id`,`cname`,`ename`,`img`,`describe`,`remark`,`modified`,`gtm_create`,`gtm_modified`,`status`,`created` from series
        <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="uuid != null and uuid != ''"> and uuid = #{uuid} </if>
		  		  <if test="brandId != null and brandId != ''"> and brand_id = #{brandId} </if>
		  		  <if test="cname != null and cname != ''"> and cname = #{cname} </if>
		  		  <if test="ename != null and ename != ''"> and ename = #{ename} </if>
		  		  <if test="img != null and img != ''"> and img = #{img} </if>
		  		  <if test="describe != null and describe != ''"> and describe = #{describe} </if>
		  		  <if test="remark != null and remark != ''"> and remark = #{remark} </if>
		  		  <if test="modified != null and modified != ''"> and modified = #{modified} </if>
		  		  <if test="gtmCreate != null and gtmCreate != ''"> and gtm_create = #{gtmCreate} </if>
		  		  <if test="gtmModified != null and gtmModified != ''"> and gtm_modified = #{gtmModified} </if>
		  		  <if test="status != null and status != ''"> and status = #{status} </if>
		  		  <if test="created != null and created != ''"> and created = #{created} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from series
		 <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="uuid != null and uuid != ''"> and uuid = #{uuid} </if>
		  		  <if test="brandId != null and brandId != ''"> and brand_id = #{brandId} </if>
		  		  <if test="cname != null and cname != ''"> and cname = #{cname} </if>
		  		  <if test="ename != null and ename != ''"> and ename = #{ename} </if>
		  		  <if test="img != null and img != ''"> and img = #{img} </if>
		  		  <if test="describe != null and describe != ''"> and describe = #{describe} </if>
		  		  <if test="remark != null and remark != ''"> and remark = #{remark} </if>
		  		  <if test="modified != null and modified != ''"> and modified = #{modified} </if>
		  		  <if test="gtmCreate != null and gtmCreate != ''"> and gtm_create = #{gtmCreate} </if>
		  		  <if test="gtmModified != null and gtmModified != ''"> and gtm_modified = #{gtmModified} </if>
		  		  <if test="status != null and status != ''"> and status = #{status} </if>
		  		  <if test="created != null and created != ''"> and created = #{created} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.xcx.domain.SeriesDO">
		<selectKey keyProperty="uuid" resultType="String" order="BEFORE">
			select  replace(uuid(),'-','')   from dual
		</selectKey>
		insert into series
		(
			`id`, 
			`uuid`, 
			`brand_id`, 
			`cname`, 
			`ename`, 
			`img`, 
			`describe`, 
			`remark`, 
			`modified`, 
			`gtm_create`, 
			`gtm_modified`, 
			`status`, 
			`created`
		)
		values
		(
			#{id}, 
			#{uuid}, 
			#{brandId}, 
			#{cname}, 
			#{ename}, 
			#{img}, 
			#{describe}, 
			#{remark}, 
			#{modified}, 
			#{gtmCreate}, 
			#{gtmModified}, 
			#{status}, 
			#{created}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.xcx.domain.SeriesDO">
		update series 
		<set>
			<if test="uuid != null">`uuid` = #{uuid}, </if>
			<if test="brandId != null">`brand_id` = #{brandId}, </if>
			<if test="cname != null">`cname` = #{cname}, </if>
			<if test="ename != null">`ename` = #{ename}, </if>
			<if test="img != null">`img` = #{img}, </if>
			<if test="describe != null">`describe` = #{describe}, </if>
			<if test="remark != null">`remark` = #{remark}, </if>
			<if test="modified != null">`modified` = #{modified}, </if>
			<if test="gtmCreate != null">`gtm_create` = #{gtmCreate}, </if>
			<if test="gtmModified != null">`gtm_modified` = #{gtmModified}, </if>
			<if test="status != null">`status` = #{status}, </if>
			<if test="created != null">`created` = #{created}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="remove">
		delete from series where id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from series where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

	<select id="getSeriesByBrandUuid" resultType="com.bootdo.xcx.domain.SeriesDO">
		select `id`,`uuid`,`brand_id`,`cname`,`ename`,`img`,`describe`,`remark`,`status`from series where brand_id = #{value} AND status = '1'
	</select>
</mapper>